Emulates Perl's Carp module
http://search.cpan.org/~dapm/perl-5.10.1/lib/Carp.pm as best as possible to
warn or die of errors in programs written in C on a machine that has gcc and 
gdb.

The following macros are defined for use:

-   warn - prints message with the file and line
-   die - like a warn that exits the program
-   carp - warn of errors (from perspective of caller)
-   croak - die of errors (from perspective of caller)
-   cluck - warn of errors with stack backtrace
-   confess - die of errors with stack backtrace

There are also the macros ewarn, edie, ecarp, ecroak, ecluck, econfess which
work just like the previous macros but add an errno string to your message.


SYNOPSIS
========

    #include <carp.h>
    #line 3 "libb"
    void foo4() {
        warn("warn");
        carp("carp");
        cluck("cluck");
    }
    void foo3() {foo4();}
    #line 10 "liba"
    void foo2() {foo3();}
    void foo1() {foo2();}
    void bar2() {
        warn("warn");
        carp("carp");
        cluck("cluck");
        croak("croak");
    }
    void bar1() {bar2();}
    #line 20 "test1.c"
    int main() {
        foo1();
        bar1();
        return 0;
    }

Results in:

    warn at libb line 4
    carp at liba line 10
    cluck at libb line 6
        foo4() called at libb line 8
        foo3() called at liba line 10
        foo2() called at liba line 11
        foo1() called at test1.c line 21
        main()
    warn at liba line 13
    carp at test1.c line 22
    cluck at liba line 15
        bar2() called at liba line 18
        bar1() called at test1.c line 22
        main()
    croak at test1.c line 22


DESCRIPTION
===========

This library works by reading from a an attached gdb process. If unable to
get info from a stack trace, carp and cluck revert to a warn and croak and
confess revert to a die. However, even with debugging (gcc's -g option) 
disabled requesting a stacktrace may provide some useful information. It uses 
files instead of packages (as Perl does) to determine the trust divide.

PLANS
=====

Perl's Carp package reads @CARP_NOT or @ISA to determine more packages to
trust. This library should have a similar function.

Define a way to specify callbacks to occur just before the message is printed 
so it could be redirected or debugged.

A macro like NDEBUG to go to a warn or die without first trying to get a
stack trace from gdb.





